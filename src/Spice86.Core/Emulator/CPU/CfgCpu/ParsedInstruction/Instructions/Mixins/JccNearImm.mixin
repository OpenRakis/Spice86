@moxy
@attribute required int Size
@attribute required string SignedType
@attribute required string JumpCondition
@attribute required string Mnemonic
@moxy
namespace {{ moxy.Class.Namespace }};

using Spice86.Core.Emulator.CPU.CfgCpu.InstructionExecutor;
using Spice86.Core.Emulator.CPU.CfgCpu.InstructionRenderer;
using Spice86.Core.Emulator.CPU.CfgCpu.ParsedInstruction.Instructions.CommonGrammar;
using Spice86.Core.Emulator.CPU.CfgCpu.ParsedInstruction.Prefix;
using Spice86.Shared.Emulator.Memory;

public partial class {{ moxy.Class.Name }} : JmpNearImm{{Size}} {
    public {{ moxy.Class.Name }}(SegmentedAddress address, InstructionField<ushort> opcodeField, List<InstructionPrefix> prefixes, InstructionField<{{SignedType}}> offsetField) :
        base(address, opcodeField, prefixes, offsetField) {
    }

    public override void Execute(InstructionExecutionHelper helper) {
        State state = helper.State;
        if({{JumpCondition}}) {
            base.Execute(helper);
        } else {
            helper.MoveIpAndSetNextNode(this);
        }
    }

    public override string ToAssemblyString(InstructionRendererHelper helper) {
        return helper.ToAssemblyString("{{Mnemonic}} {{ if Size == 8 }}short{{else}}near{{ end }}", TargetIpToString(helper));
    }
}