@moxy
@attribute required int Size
@attribute required bool IsSegment
@moxy

namespace {{ moxy.Class.Namespace }};

using Spice86.Core.Emulator.CPU.CfgCpu.InstructionExecutor;
using Spice86.Core.Emulator.CPU.CfgCpu.InstructionRenderer;
using Spice86.Core.Emulator.CPU.CfgCpu.ParsedInstruction.Prefix;
using Spice86.Core.Emulator.CPU.CfgCpu.ParsedInstruction.Instructions.CommonGrammar;
using Spice86.Core.Emulator.CPU.Registers;
using Spice86.Shared.Emulator.Memory;

public partial class {{ moxy.Class.Name }} : InstructionWithRegisterIndex {
    public {{ moxy.Class.Name }}(SegmentedAddress address, InstructionField<ushort> opcodeField, List<InstructionPrefix> prefixes,
        int registerIndex) : base(address, opcodeField, prefixes, registerIndex) {
        {{ if IsSegment }}
        if(registerIndex == (int)SegmentRegisterIndex.CsIndex) {
            throw new ArgumentException("Register CS is not allowed");
        }
        {{ end }}
    }

    public override void Execute(InstructionExecutionHelper helper) {
        helper.{{ if IsSegment }}SegmentRegisters{{ else }}UInt{{Size}}Registers{{ end }}[RegisterIndex] = helper.Stack.Pop{{Size}}();
        helper.MoveIpAndSetNextNode(this);
    }

    public override string ToAssemblyString(InstructionRendererHelper helper) {
        return helper.ToAssemblyString("pop", helper.ToString{{ if IsSegment }}Segment{{ end }}Register(RegisterIndex{{ if !IsSegment }}, {{Size}}{{ end }}));
    }
}