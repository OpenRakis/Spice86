<Window xmlns="https://github.com/avaloniaui"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:vm="using:Spice86.ViewModels"
		xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
		xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
		xmlns:converters="clr-namespace:Spice86.Views.Converters"
		xmlns:local="clr-namespace:Spice86.Views;assembly=Spice86"
		xmlns:b="clr-namespace:Spice86.Views.Behaviors"
		xmlns:userControls="clr-namespace:Spice86.Views.UserControls"
	    xmlns:factory="clr-namespace:Spice86.Views.Factory"
		xmlns:fluent="clr-namespace:FluentIcons.Avalonia.Fluent;assembly=FluentIcons.Avalonia.Fluent"
		xmlns:controls="clr-namespace:Spice86.Views.Controls"
		mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
		x:Class="Spice86.Views.MainWindow"
		Icon="/Views/Assets/Spice86.ico"
		Title="{Binding MainTitle}"
		x:CompileBindings="True" x:DataType="vm:MainWindowViewModel"
		MinWidth="1024"
		MinHeight="768"
		Width="1024"
		Height="768"
		WindowStartupLocation="CenterScreen"
		CanResize="True">
	<Window.DataTemplates>
		<factory:ViewLocator />
	</Window.DataTemplates>
	<Window.Resources>
		<converters:NullableToBooleanConverter x:Key="NullableToBooleanConverter" />
	</Window.Resources>
	<Design.DataContext>
		<vm:MainWindowViewModel />
	</Design.DataContext>
	<Grid RowDefinitions="Auto,Auto,*,Auto">
		<Menu Name="Menu" Focusable="False" Grid.Row="0" IsVisible="{Binding !IsDialogVisible}">
			<MenuItem Header="Debug">
				<MenuItem HotKey="Ctrl+Alt+F2" ToolTip.Tip="Ctrl+Alt+F2" IsEnabled="{Binding IsEmulatorRunning}">
					<MenuItem.Header>
						<StackPanel Orientation="Horizontal">
							<fluent:SymbolIcon Symbol="Glance" />
							<Label Content="Internal Debugger" />
						</StackPanel>
					</MenuItem.Header>
					<Interaction.Behaviors>
						<b:ShowInternalDebuggerBehavior />
					</Interaction.Behaviors>
				</MenuItem>
				<MenuItem>
					<MenuItem.Header>
						<StackPanel Orientation="Horizontal">
							<fluent:SymbolIcon Symbol="Info" />
							<Label Content="{Binding CurrentLogLevel, StringFormat='Log Level ({0})'}" />
						</StackPanel>
					</MenuItem.Header>
					<MenuItem Header="Silent" Command="{Binding SetLogLevelToSilent}" />
					<MenuItem Header="Verbose" Command="{Binding SetLogLevelToVerbose}" />
					<MenuItem Header="Debug" Command="{Binding SetLogLevelToDebug}" />
					<MenuItem Header="Information" Command="{Binding SetLogLevelToInformation}" />
					<MenuItem Header="Warning" Command="{Binding SetLogLevelToWarning}" />
					<MenuItem Header="Error" Command="{Binding SetLogLevelToError}" />
					<MenuItem Header="Fatal" Command="{Binding SetLogLevelToFatal}" />
				</MenuItem>
				<MenuItem
					HotKey="Ctrl+Alt+D" ToolTip.Tip="Ctrl+Alt+D"
					IsEnabled="{Binding IsEmulatorRunning}" Command="{Binding DumpEmulatorStateToFileCommand}">
					<MenuItem.Header>
						<StackPanel Orientation="Horizontal">
							<fluent:SymbolIcon Symbol="Document" />
							<Label Content="Dump emulator state to directory..." />
						</StackPanel>
					</MenuItem.Header>
				</MenuItem>
				</MenuItem>
			<MenuItem Header="Video" IsEnabled="{Binding IsEmulatorRunning}">
				<MenuItem>
					<MenuItem.Header>
						<StackPanel Orientation="Horizontal">
							<Label Content="Scale" VerticalAlignment="Center" HorizontalContentAlignment="Center" />
							<NumericUpDown Text="{Binding Scale}" FormatString="0" Minimum="0" Margin="5,0,0,0" />
						</StackPanel>
					</MenuItem.Header>
				</MenuItem>
				<MenuItem>
					<MenuItem.Header>
						<CheckBox Content="Show Cursor" IsChecked="{Binding ShowCursor}" />
					</MenuItem.Header>
				</MenuItem>
				<MenuItem Command="{Binding SaveBitmapCommand}">
					<MenuItem.Header>
						<StackPanel Orientation="Horizontal">
							<fluent:SymbolIcon Symbol="Image" />
							<Label Content="Save Bitmap" />
						</StackPanel>
					</MenuItem.Header>
				</MenuItem>
			</MenuItem>
		</Menu>
		<StackPanel Grid.Row="0" HorizontalAlignment="Center" VerticalAlignment="Top" Orientation="Horizontal">
			<Button Focusable="False" Command="{Binding PauseCommand}" ToolTip.Tip="Pause (Ctrl+Shift+F5)" HotKey="Ctrl+Shift+F5" IsVisible="{Binding !IsPaused}">
				<fluent:SymbolIcon Symbol="Pause" />
			</Button>
			<Button Focusable="False" Command="{Binding PlayCommand}" ToolTip.Tip="Continue (F5)" HotKey="F5" IsVisible="{Binding IsPaused}">
				<fluent:SymbolIcon Symbol="Play" />
			</Button>
			<Label Focusable="False" VerticalAlignment="Center" Content="Time Modifier" />
			<NumericUpDown FormatString="0" Focusable="False" Margin="5,0,0,0" Value="{Binding TimeMultiplier, FallbackValue=1}" Minimum="1" />
			<Button Focusable="False" Margin="5,0,0,0" HotKey="F4" Command="{Binding ResetTimeMultiplierCommand}">
				<fluent:SymbolIcon Symbol="ArrowReset" />
			</Button>
		</StackPanel>
		<StackPanel Focusable="False" Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Top" Orientation="Horizontal">
			<TextBlock Focusable="False" VerticalAlignment="Center" Text="Target cycles/ms:" Margin="0,0,5,0" />
			<Button Margin="0,0,5,0" HotKey="Ctrl+F11" Focusable="False" Command="{Binding DecreaseTargetCyclesCommand}" Content="-" />
			<NumericUpDown Focusable="False" Text="{Binding TargetCyclesPerMs}" Minimum="50" Maximum="60000" />
			<Button Margin="5,0,0,0" HotKey="Ctrl+F12" Focusable="False" Command="{Binding IncreaseTargetCyclesCommand}" Content="+" />
		</StackPanel>
		<ContentPresenter Grid.Row="0" HorizontalAlignment="Right" VerticalAlignment="Top"
			Content="{ReflectionBinding PerformanceViewModel, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}" />
		<Viewbox Grid.Row="2">
			<LayoutTransformControl>
				<LayoutTransformControl.RenderTransform>
					<ScaleTransform
						ScaleX="{Binding Scale}"
						ScaleY="{Binding Scale}">
					</ScaleTransform>
				</LayoutTransformControl.RenderTransform>
				<Viewbox>
					<Image x:Name="Image"
					    RenderOptions.BitmapInterpolationMode="None"
					    Cursor="{Binding Cursor}"
					    Source="{Binding Bitmap}" />
				</Viewbox>
			</LayoutTransformControl>
		</Viewbox>
		<controls:StatusBar VerticalAlignment="Bottom" Grid.Row="3">
			<controls:StatusBarItem>
				<TextBlock Text="{Binding StatusMessage}" />
			</controls:StatusBarItem>
			<Separator />
			<controls:StatusBarItem>
				<TextBlock Text="{Binding AsmOverrideStatus}" />
			</controls:StatusBarItem>
			<Separator />
			<controls:StatusBarItem>
				<TextBlock Text="{Binding Configuration.GdbPort, StringFormat='GDB port: {0}'}"
				           IsVisible="{Binding Configuration.GdbPort, Converter={StaticResource NullableToBooleanConverter}}" />
			</controls:StatusBarItem>
		</controls:StatusBar>
		<WrapPanel HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Row="0" Grid.RowSpan="3"
		        IsVisible="{Binding IsDialogVisible, FallbackValue=False}">
				<userControls:ErrorModalDialogUserControl x:Name="ErrorDialog" />
		</WrapPanel>
	
</Grid>
</Window>